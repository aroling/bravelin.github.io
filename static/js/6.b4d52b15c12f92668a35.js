webpackJsonp([6,23],{36:function(e,t){"use strict";e.exports={mounted:function(){this.$nextTick(function(){var e=document.querySelectorAll("code");if(e.length>0)for(var t=0;t<e.length;t++)hljs.highlightBlock(e[t])})}}},64:function(e,t,r){var n,a;n=r(36);var o=r(90);a=n=n||{},"object"!=typeof n.default&&"function"!=typeof n.default||(a=n=n.default),"function"==typeof a&&(a=a.options),a.render=o.render,a.staticRenderFns=o.staticRenderFns,e.exports=n},90:function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"page article"},[r("h2",{staticClass:"title"},[e._v("《ES6标准入门》笔记之六：数组的扩展")]),e._v(" "),e._m(0),e._v(" "),r("footer",[e._v("2017年03月21日")]),e._v(" "),r("comments")])},staticRenderFns:[function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[r("h3",{staticClass:"title"},[e._v("Array.from()")]),e._v(" "),r("p",[e._v("用于将两类的对象转为真正的数组：类似数组的对象（array-like object）和可遍历的对象（iterable，包括Set和Map）。")]),e._v(" "),r("pre",[r("code",[e._v("let arrLike = { '0' : 'a', '1' : 'b', '2' : 'c', length : 3 }\n// es5的写法\nvar arr1 = [].slice.call(arrLike) // [\"a\", \"b\", \"c\"]\n\n// es6的写法\nvar arr2 = Array.from(arrLike) // [\"a\", \"b\", \"c\"]")])]),e._v(" "),r("p",[e._v("常见的类似数组的对象有DOM操作的NodeList对象、函数内部的arguments对象。Array.from都可以将它们转为真正的数组。")]),e._v(" "),r("pre",[r("code",[e._v('var ps = document.querySelector(\'p\')\nArray.from(ps).forEach(function (p) { console.dir(p) }) // 数组对象才有forEach方法\n\nArray.from(\'abcde\') // ["a", "b", "c", "d", "e"] 字符串转数组\n\nlet newSet = new Set([\'a\', \'b\'])\nArray.from(newSet) // ["a", "b"]')])]),e._v(" "),r("p",[e._v("因为字符串和Set都有Iterator结构，因此可以被Array.from转为正真的数组。")])])}]}}});